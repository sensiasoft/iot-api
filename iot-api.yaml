openapi: 3.0.0
info:
  version: 1.0.0
  title: Sensiasoft IoT API
  description: |-
    This is the OpenAPI documentation for Sensiasoft IoT API.
    
    All resource and resource collection paths also support websocket and MQTT connections
    to receive events via server push. For MQTT, the path is used as the topic. Events
    are sent for resource creations, updates and deletions. In addition to the query
    parameters defined in this spec, these pub/sub bindings also support the "eventType"
    parameter to allow selecting one or more of these event types.
    
  contact:
    name: API Support
    email: contact@sensiasoft.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
    
servers:
  - url: 'https://demo.server.net/api'
    description: Demo Server (TBD)
    
tags:
  - name: Systems
    description: >-
      Measurement systems (e.g. sensors, sensor networks, actuators, processing components, etc.)
      that produce observations about features of interest
  - name: Features of Interest
    description: >-
      Features of interest are physical or logical entities, often geospatial in nature 
      (but not always) that are the subject of observations (i.e. whose properties are
      observed by a system). This collection can include both sampling features and
      sampled features. 
  - name: Datastreams
    description: >-
      Datastreams are collections of observations generated by systems and are associated to 
      system outputs. A given system can have zero or more datastreams.
  - name: Observations
    description: >-
      Real-time and historical observations produced by systems
  - name: Tasking
    description: >-
      Operations for tasking systems (i.e. sending commands). A system can have zero or more
      control channels where to receive commands and report command status.
      
paths:
               
  /systems:
    get:
      summary: >- 
        List or search all observing systems available through this API.
        By default, only top level systems are listed (i.e. subsystems are ommitted) unless the "parent" query parameter is set
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/parent'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemCollectionResponse'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Create a new top-level observing system
      tags:
        - Systems
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}':
    get:
      summary: >-
        Get a specific system resource by ID.
        Note that this will return the description of the system valid at
        the current time. To get the description valid for a past (or future)
        time, use the "history" sub-collection.
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    put:
      summary: >-
        Update a specific system resource.
        This will only update the description of the system that is valid at the current
        time and its validTime property cannot be changed. For more advanced modifications
        of the system history, use the "history" sub collection.
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '204':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
                    
  /datastreams:
    get:
      summary: >- 
        List or search all datastreams available through this API.
      tags:
        - Datastreams
      parameters:
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/observedProperty'
        - $ref: '#/components/parameters/phenomenonTime'
        - $ref: '#/components/parameters/resultTime'
        - $ref: '#/components/parameters/featureOfInterest'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'        
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataStream'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/datastreams/{dsid}':
    get:
      summary: Get a specific datastream resource by ID
      tags:
        - Datastreams
      parameters:
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataStream'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
                
  /observations:
    get:
      summary: >- 
        List or search all observations available through this API.
      tags:
        - Observations
      parameters:
        - $ref: '#/components/parameters/phenomenonTime'
        - $ref: '#/components/parameters/resultTime'
        - $ref: '#/components/parameters/featureOfInterest'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/observations/{obsid}':
    get:
      summary: Get a specific observation resource by ID
      tags:
        - Observations
      parameters:
        - $ref: '#/components/parameters/obsid'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
  
  
  /featuresOfInterest:
    get:
      summary: >- 
        List or search all sampled and sampling features available through this API.
        By default, only top level features and collections are listed (i.e. nested members
        of feature collections are ommitted) unless the "parent" query parameter is set.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/parent'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureOrCollection'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Create a new top-level feature or feature collection
      tags:
        - Features of Interest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureOrCollection'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/featuresOfInterest/{fid}':
    get:
      summary: >-
        Get a specific feature resource by ID.
        Note that this will return the description of the feature valid at
        the current time. To get the description valid for a past (or future)
        time, use the "history" sub-collection.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureOrCollection'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    put:
      summary: >-
        Update a specific feature or feature collection resource.
        This will only update the description of the feature that is valid at the current
        time and its validTime property cannot be changed. For more advanced modifications
        of the feature history, use the "history" sub collection.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureOrCollection'
      responses:
        '204':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
          
  # System nested resources
  '/systems/{sysid}/details':
    get:
      summary: Get the latest specsheet of a system
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    put:
      summary: >-
        Update the specsheet of a specific system.
        This will only update the specsheet that is valid at the current time and its validTime
        property cannot be changed. For more advanced modifications of the system history,
        use the "history" sub collection.
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '204':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/featuresOfInterest':
    get:
      summary: List or search features of interest of a system. Individual features
        can be retrieved by ID directly on the root "featuresOfInterest" collection
      tags:
        - Systems
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Feature'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Add a new feature of interest to a system or system group
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feature'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/members':
    get:
      summary: >-
        List or search members of a system group. Individual members can be
        retrieved by ID directly on the root "systems" collection
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Add a new member to a system group
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/datastreams':
    get:
      summary: >-
        List or search output datastreams of the selected system. Individual
        datastreams can be retrieved by ID directly on the root "datastreams" collection.
      tags:
        - Systems
        - Datastreams
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/observedProperty'
        - $ref: '#/components/parameters/phenomenonTime'
        - $ref: '#/components/parameters/resultTime'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DataComponent'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Add a new datastream to the selected system
      tags:
        - Systems
        - Datastreams
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DataStream'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/history':
    get:
      summary: >-
        List or search for historical descriptions of a specific system
        (ordered by time of validity)
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: >-
        Add a system description valid for a certain time period to the history.
        The system description must have a validTime property and its value cannot
        intersect the validity time period of any other description already in the
        history (except for time periods ending at 'now').
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/history/{ver}':
    get:
      summary: Get a specific version of a system description in the history.
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/ver'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    put:
      summary: Update a specific version of a system description in the history.
      tags:
        - Systems
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/ver'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
            
  '/systems/{sysid}/controls':
    get:
      summary: Get the list of control interfaces of a system
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/actuableProperty'
        - $ref: '#/components/parameters/issueTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandStream'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Add a new control interface to a system
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommandStream'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/controls/{dsid}':
    get:
      summary:  Get a specific control interface description by ID.
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
      responses:
        '200':
          description: OK. Successful request
  
    
  # Datastream nested resources
  '/datastreams/{dsid}/observations':
    get:
      summary: Retrieve historical observations from a datastream
      tags:
        - Observations
      parameters:
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/phenomenonTime'
        - $ref: '#/components/parameters/resultTime'
        - $ref: '#/components/parameters/featureOfInterest'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/location'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
    post:
      summary: Post a new observation to the selected datastream
      tags:
        - Observations
      parameters:
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/featureOfInterest'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
          
  # Control channel nested resources
  '/systems/{sysid}/controls/{dsid}/commands':
    get:
      summary: Get the list of commands received by a particular control interface
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/issueTime'
        - $ref: '#/components/parameters/executionTime'
        - $ref: '#/components/parameters/statusCode'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Command'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Send a new command to this control interface
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX' 
          
  '/systems/{sysid}/controls/{dsid}/status':
    get:
      summary: Get all status messages sent by this control interface
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/reportTime'
        - $ref: '#/components/parameters/executionTime'
        - $ref: '#/components/parameters/statusCode'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/systems/{sysid}/controls/{dsid}/commands/{cmdid}/status':
    get:
      summary: Get all status messages associated to a specific command
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
        - $ref: '#/components/parameters/cmdid'
        - $ref: '#/components/parameters/reportTime'
        - $ref: '#/components/parameters/executionTime'
        - $ref: '#/components/parameters/statusCode'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommandStatus'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Send a new status report associated to this command (this is typically used by a system receiving commands from the API)
      tags:
        - Tasking
      parameters:
        - $ref: '#/components/parameters/sysid'
        - $ref: '#/components/parameters/dsid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Command'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX' 
  
  # Feature nested resources
  '/featuresOfInterest/{fid}/history':
    get:
      summary: >-
        List or search for historical descriptions of a specific feature
        (ordered by time of validity)
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureOrCollection'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: >-
        Add a feature description valid for a certain time period to the history.
        The feature description must have a validTime property and its value cannot
        intersect the validity time period of any other description already in the
        history (except for time periods ending at 'now').
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureOrCollection'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/featuresOfInterest/{fid}/history/{ver}':
    get:
      summary: Get a specific version of a feature description in the history.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
        - $ref: '#/components/parameters/ver'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureOrCollection'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    put:
      summary: Update a specific version of a feature description in the history.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
        - $ref: '#/components/parameters/ver'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureOrCollection'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
  '/featuresOfInterest/{fid}/members':
    get:
      summary: >-
        List or search members of a feature collection. By default, only direct members are 
        listed unless the "parent" query parameter is set to "*". Likewise, only the current
        version of each features is listed unless the "validTime" query parameter is set.
        Individual members can be retrieved by ID directly on the root "features" collection.
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
        - $ref: '#/components/parameters/fulltext'
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/validTime'
        - $ref: '#/components/parameters/select'
        - $ref: '#/components/parameters/format'
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/offset'
      responses:
        '200':
          description: OK. Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeatureOrCollection'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
    post:
      summary: Add a new member to a feature collection
      tags:
        - Features of Interest
      parameters:
        - $ref: '#/components/parameters/fid'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeatureOrCollection'
      responses:
        '201':
          $ref: '#/components/responses/201'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        5XX:
          $ref: '#/components/responses/5XX'
          
          
components:
  schemas:
    ResourceWithId:
      type: object
      properties:
        'id':   
          description: Server assigned resource identifier (auto-generated by server on POST)
          type: string
    ResourceProperties:
      description: Common information shared by all resource types
      type: object
      required:
        - name
      properties:
        'name':
          description: Human readable resource name
          type: string
        'description':
          description: Human readable description of resource
          type: string
          
    FeatureProperties:
      allOf:
        - $ref: '#/components/schemas/ResourceProperties'
    Feature:
      description: GeoJSON feature representing a feature of interest
      allOf:
        - $ref: '#/components/schemas/ResourceWithId'
        - $ref: 'https://geojson.org/schema/Feature.json'
        - type: object
          properties:
            'properties':
              $ref: '#/components/schemas/FeatureProperties'
    FeatureCollection:
      description: GeoJSON feature representing a collection of geospatial features
      allOf:
        - $ref: '#/components/schemas/Feature'
        - type: object
          properties:
            'schemaUrl':
              type: string
            'numElements':
              type: integer
              format: int32
    FeatureOrCollection:
      type: object
      oneOf:
        - $ref: '#/components/schemas/Feature'
        - $ref: '#/components/schemas/FeatureCollection'
        
    SystemProperties:
      allOf:
        - $ref: '#/components/schemas/ResourceProperties'
        - type: object
          properties:
            'uid':
              description: Globally unique ID of system (URI)
              type: string
            'type':
              description: Type of system (sensor, process, actuator, etc.)
              type: string
    System:
      description: GeoJSON feature representing a system
      allOf:
        - $ref: '#/components/schemas/ResourceWithId'
        - $ref: 'https://geojson.org/schema/Feature.json'
        - type: object
          properties:
            'numMembers':
              type: integer
              format: int32
            'properties':
              $ref: '#/components/schemas/SystemProperties'
    SystemCollectionResponse:
      type: object
      allOf:
        - type: object
          properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/System'
        - $ref: '#/components/schemas/Links'
    AbstractProcess:
      type: object
    DataStream:
      allOf:
        - $ref: '#/components/schemas/ResourceWithId'
        - $ref: '#/components/schemas/ResourceProperties'
        - type: object
          properties:
            'resultSchema':
              $ref: '#/components/schemas/DataComponent' 
            'resultEncoding':
              type: array
              items: 
                $ref: '#/components/schemas/DataEncoding'
    CommandStream:
      type: Object
    DataComponent:
      type: object
    DataEncoding:
      type: object
    Observation:
      type: object
    SWEEncodedData:
      type: object
    Command:
      type: object
    CommandStatus:
      type: object
    Links:
      type: array
      items:
        type: object
        properties:
          'rel':
            type: string
          'title':
            type: string
          'href':
            type: string
          'type':
            type: string
            
    ResourceEvent:
      type: object
      description: Resource Event
      properties:
        resourceId:
          description: Resource identifier
          type: string
        type:
          type: string
          enum:
            - added
            - updated
            - deleted
    SystemEvent:
      type: object
      description: System Event
      properties:
        systemId:
          description: System resource identifier
          type: string
        type:
          type: string
          enum:
            - connected
            - disconnected
    Query:
      type: object
      description: Advanced query
      properties:
        selectFrom:
          type: string
          description: URL of base resource to select results from
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    DateTime:
      description: |-
        ISO 8601 encoded time instant or special value.
        Examples:
          * A time instant: "2020-02-12T23:20:50Z" or "2020-01-15Z"
          * Special indeterminate value: "now", "oldest", "latest"
      oneOf:
        - type: string
          format: date
        - type: string
          format: date-time
        - type: string
          enum: [now, oldest, latest]
    DateTimeOrPeriod:
      description: |-
        ISO 8601 encoded time period that can include special values.
        Examples:
          * A closed interval: "2020-02-12T00:00:00Z/2020-03-18T12:31:12Z" or "2020-01-15Z/2020-02-16Z"
          * An open interval: "2020-02-12T00:00:00Z/.." or "../2020-03-18T12:31:12Z"
          * An interval with indeterminate value: "2020-02-12T00:00:00Z/now" or "now/.."
      
  parameters:
    cid:
      name: cid
      in: path
      description: The ID of the FeatureCollection or SystemGroup resource
      required: true
      schema:
        type: string
    fid:
      name: fid
      in: path
      description: The ID of the Feature resource
      required: true
      schema:
        type: string
    sysid:
      name: sysid
      in: path
      description: The ID of the System resource
      required: true
      schema:
        type: string
        example: '9mf1z3pj'
    ver:
      name: ver
      in: path
      description: The version number of the description in the history
      required: true
      schema:
        type: integer
        minimum: 1
    dsid:
      name: dsid
      in: path
      description: The ID of the datastream or command stream
      required: true
      schema:
        type: string
        example: 'ctxe2v7t'
    obsid:
      name: obsid
      in: path
      description: The ID of the observation
      required: true
      schema:
        type: string
    cmdid:
      name: cmdid
      in: path
      description: The ID of the command
      required: true
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Maximum number of results returned per page (max 1000)
      required: false
      schema:
        type: integer
        example: 10
    offset:
      name: offset
      in: query
      description: >-
        Token specifying the page to return (usually the token provided in the
        previous call)
      required: false
      schema:
        type: integer
    select:
      name: select
      in: query
      description: >-
        Comma separated list of properties to include or exclude from results
        (use "!" prefix to exclude)
      required: false
      schema:
        type: array
        items:
          type: string
    format:
      name: format
      in: query
      description: |-
        Mime type designating the format to use to encode the response.
      required: false
      schema:
        type: string
        example: 'application/json'
    parent:
      name: parent
      in: query
      description: >-
        Comma separated list of parent resource IDs to restrict the search to or "*"
        to include nested resources at any level
      required: false
      schema:
        type: array
        items:
          type: string
    fulltext:
      name: q
      in: query
      description: Comma separated keywords used for full-text search
      required: false
      schema:
        type: string
    bbox:
      name: bbox
      in: query
      description: BBOX to filter resources on their location
      required: false
      schema:
        type: string
      examples:
        '-':
          value: ''
        bbox:
          value: '46.3, 6.4, 46.35, 6.45'
    location:
      name: location
      in: query
      description: WKT geometry and operator to filter resources on their location or geometry
      required: false
      schema:
        type: string
      examples:
        '-':
          value: ''
        polygon:
          value: 'intersect:POLYGON((0 0,4 0,4 4,0 4,0 0))'
    validTime:
      name: validTime
      in: query
      description: |-
        ISO 8601 time range to filter resources on their validity time.        
        When this parameter is omitted, the implicit value is "now", except for "history"
        collections where the absence of this parameter means no filtering is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    phenomenonTime:
      name: phenomenonTime
      in: query
      description: |-
        ISO 8601 time range to filter observations on the phenomenon time.
        When this parameter is omitted, no filtering on "phenomenonTime" is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    resultTime:
      name: resultTime
      in: query
      description: |-
        ISO 8601 time range to filter observations on their result time.
        When this parameter is omitted, no filtering on "resultTime" is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    featureOfInterest:
      name: featureOfInterest
      in: query
      description: Comma separated list of feature of interest IDs to get
        observations for.
      schema:
        type: array
        items:
          type: string
    observedProperty:
      name: observedProperty
      in: query
      description: Comma separated list of observed property URIs to get
        observations for.
      schema:
        type: array
        items:
          type: string
          format: uri 
    issueTime:
      name: issueTime
      in: query
      description: |-
        ISO 8601 time range to filter commands on their issue time.
        When this parameter is omitted, no filtering on "issueTime" is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    reportTime:
      name: reportTime
      in: query
      description: |-
        ISO 8601 time range to filter status messages on their report time.
        When this parameter is omitted, no filtering on "reportTime" is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    executionTime:
      name: executionTime
      in: query
      description: |-
        ISO 8601 time range to filter commands on their execution time.
        When this parameter is omitted, no filtering on "executionTime" is applied.
      required: false
      schema:
        $ref: '#/components/schemas/DateTimeOrPeriod'
    statusCode:
      name: statusCode
      in: query
      description: >-
        Comma separated list of status codes
      required: false
      schema:
        type: array
        items:
          type: string
          enum: [PENDING, ACCEPTED, REJECTED, SCHEDULED, UPDATED, CANCELED, EXECUTING, FAILED, COMPLETED]
    actuableProperty:
      name: actuableProperty
      in: query
      description: Comma separated list of actuable property URIs to filter
        command streams.
      schema:
        type: array
        items:
          type: string
          format: uri 
          
  responses:
    '201':
      description: Success - New resource created
      headers:
        Location:
          schema:
            type: string
          description: URI of newly created resource
    '204':
      description: Success - Resource updated
    '400':
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: No authentication information was provided
    '403':
      description: The user doesn't have the necessary permissions to access the resource
    '404':
      description: No resource was found with specified URL
    5XX:
      description: 'Unexpected server error. Only retry on 502, 503'
